@model CharacterCardViewModel
@{
    string submitLabel = "Vote";
    string actionName = "Vote";
    if (Model.CharacterWithState.State.AlreadyVotedFor)
    {
        submitLabel = "Cancel vote";
        actionName = "Unvote";
    }


}
<div class="character-card" id="@("characterCard" + Model.CharacterWithState.Character.CharacterID)">
    <div class="character-wrapper">
        <div class="character-image"><img src="@("/Content/img/" + @Model.CharacterWithState.Character.ImageName)" alt="@Model.CharacterWithState.Character.Name" /></div>
        <div class="character-description">
            <p><b>Name</b>: @Model.CharacterWithState.Character.Name</p>
            <p><b>Gender</b>: @Model.CharacterWithState.Character.Gender.ToString()</p>
            <p><b>Description</b>: @Model.CharacterWithState.Character.Description</p>
            <p><b>Price</b>: @Model.CharacterWithState.Character.Price</p>
        </div>
        <div class="character-cart-form">
            @if (Model.UserHasSavedVotes)
            {
                if (Model.CharacterWithState.State.AlreadyVotedFor)
                {
                    <b>You have voted for this character</b>
                }
            }
            else
            {
                if (Model.CharacterWithState.State.Affordable || Model.CharacterWithState.State.AlreadyVotedFor)
                {
                    using (Html.BeginForm(actionName, "Characters"))
                    {
                        <input name="characterID" value="@Model.CharacterWithState.Character.CharacterID" type="hidden" />
                        <input type="Submit" value="@submitLabel">
                    }
                }
            }
        </div>
    </div>
</div>